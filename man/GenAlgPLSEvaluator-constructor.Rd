% Generated by roxygen2 (4.0.0): do not edit by hand
\name{evaluatorPLS}
\alias{evaluatorPLS}
\title{PLS Evaluator}
\usage{
evaluatorPLS(numReplications = 30L, innerSegments = 7L,
  outerSegments = 1L, testSetSize = NULL, numThreads = NULL,
  maxNComp = NULL, method = c("simpls"))
}
\arguments{
\item{numReplications}{The number of replications used to evaluate a variable subset (must be between 1 and 2^16)}

\item{innerSegments}{The number of CV segments used in one replication (must be between 1 and 2^16)}

\item{outerSegments}{The number of outer CV segments used in one replication (between 0 and 2^16). If this
is greater than 1, the repeated double cross-validation strategy (rdCV) will be used instead of
simple repeated cross-validation (srCV)}

\item{testSetSize}{The relative size of the test set used for simple repeated CV (between 0 and 1). This parameter
is ignored if outerSegments > 1 and a warning will be issued.}

\item{numThreads}{The maximum number of threads the algorithm is allowed to spawn (a value less than 1 or NULL means no threads)}

\item{maxNComp}{The maximum number of components the PLS models should consinder (if not specified, the number is not constrained)}

\item{method}{The PLS method used to fit the PLS model (currently only SIMPLS is implemented)}
}
\value{
Returns an S4 object of type \code{\link{GenAlgPLSEvaluator}}
}
\description{
Create a PLS evaluator for the genetic algorithm
}
\details{
This evaluator class uses PLS with cross-validation (using \code{numSegments} random segments) to
assess the prediction power of the variable subset. In each of the \code{numReplications} replications
the standard error of prediction (SEP) is used to quantify the fitness of the subset. The final fitness
is the mean SEP. The larger the number of replications, the better the estimation of the SEP but the slower
the algorithm (the evaluation step is done \code{numGenerations} * \code{populationSize} times - see \code{\link{genAlgControl}}).
}
\examples{
ctrl <- genAlgControl(populationSize = 200, numGenerations = 30,
	minVariables = 5, maxVariables = 15)
evaluator <- evaluatorPLS(numReplications = 3L, numSegments = 4L, numThreads = 2L)

\dontrun{
result <- genAlg(y, x, control = ctrl, evaluator = evaluator)
}
}
\seealso{
Other GenAlg.Evaluators: \code{\link{evaluatorLM}};
  \code{\link{evaluatorUserFunction}}
}

